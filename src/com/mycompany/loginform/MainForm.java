/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.loginform;

import com.fessage.Client;
import java.awt.*;
import com.fessage.Passhash;
import com.fessage.Server;
import com.fessage.User;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.sql.SQLException;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jaysh Khan
 */
public class MainForm extends javax.swing.JFrame {
    private Client client;
    private static User user;
    private static DefaultTableModel model;
    private final Server server=new Server();
     private static final Pattern PATTERNIP = Pattern.compile(
        "^(([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}([01]?\\d\\d?|2[0-4]\\d|25[0-5])$");
    /**
     * Creates new form MainForm
     */
    public MainForm() {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileTableMenu = new javax.swing.JPopupMenu();
        Download = new javax.swing.JMenuItem();
        clientTableMenu = new javax.swing.JPopupMenu();
        DisconnectClient = new javax.swing.JMenuItem();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        MainLayer = new javax.swing.JLayeredPane();
        LoginPanel = new javax.swing.JPanel();
        passwordInput = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        redirectToSignup = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        usernameInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        SignupPanel = new javax.swing.JPanel();
        footer = new javax.swing.JLabel();
        signupInputEmail = new javax.swing.JTextField();
        signupInputName = new javax.swing.JTextField();
        signupButton = new javax.swing.JButton();
        sinupPasswordRetypeInput = new javax.swing.JTextField();
        signupPasswordInput = new javax.swing.JTextField();
        subheading = new javax.swing.JLabel();
        signupLabel = new javax.swing.JLabel();
        LoginBack = new javax.swing.JLabel();
        redirectToSignup1 = new javax.swing.JLabel();
        userdash = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        sideBar = new javax.swing.JPanel();
        dashSignup = new javax.swing.JButton();
        dashLogin = new javax.swing.JButton();
        receiveFile = new javax.swing.JButton();
        sendFile = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        UserName = new javax.swing.JLabel();
        Header = new javax.swing.JLabel();
        insideLayers = new javax.swing.JLayeredPane();
        uploadFile = new javax.swing.JPanel();
        selectFile = new javax.swing.JButton();
        choosenFilePath = new javax.swing.JTextField();
        UploadFile = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();
        jLabel7 = new javax.swing.JLabel();
        IPserver = new javax.swing.JTextField();
        connectServer = new javax.swing.JButton();
        serverStatus = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        serverPort = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        clientName = new javax.swing.JTextField();
        startReceivingFile = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        clientTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        fileTable = new javax.swing.JTable();
        portToconnect = new javax.swing.JTextField();
        startServer = new javax.swing.JButton();
        IP = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        statusServer = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        incomingFileProgress = new javax.swing.JProgressBar();
        incomingfileName = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();

        Download.setText("Download");
        Download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DownloadActionPerformed(evt);
            }
        });
        fileTableMenu.add(Download);

        DisconnectClient.setText("Disconnect");
        DisconnectClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisconnectClientActionPerformed(evt);
            }
        });
        clientTableMenu.add(DisconnectClient);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Mainframe"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 710));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MainLayer.setLayout(new java.awt.CardLayout());

        passwordInput.setBackground(new java.awt.Color(34, 73, 87));
        passwordInput.setForeground(new java.awt.Color(255, 255, 255));
        passwordInput.setText("passwordInput");
        passwordInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(34, 73, 87), 8));
        passwordInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordInputFocusGained(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(200, 150, 50));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Vectors.png"))); // NOI18N
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        redirectToSignup.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        redirectToSignup.setForeground(new java.awt.Color(34, 73, 87));
        redirectToSignup.setText("Don't Have an Account? Sigup Now!");
        redirectToSignup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                redirectToSignupMouseClicked(evt);
            }
        });

        loginButton.setBackground(new java.awt.Color(89, 255, 116));
        loginButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        usernameInput.setBackground(new java.awt.Color(34, 73, 87));
        usernameInput.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        usernameInput.setForeground(new java.awt.Color(255, 255, 255));
        usernameInput.setText("Username");
        usernameInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(34, 73, 87), 8));
        usernameInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                usernameInputFocusGained(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(34, 73, 87));
        jLabel2.setText("Sign in and Start transferring your Files");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 64)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(34, 73, 87));
        jLabel1.setText("Sign in");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout LoginPanelLayout = new javax.swing.GroupLayout(LoginPanel);
        LoginPanel.setLayout(LoginPanelLayout);
        LoginPanelLayout.setHorizontalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 1290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5))
            .addGroup(LoginPanelLayout.createSequentialGroup()
                .addGap(446, 446, 446)
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(LoginPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(redirectToSignup, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                    .addComponent(usernameInput, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(loginButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordInput))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        LoginPanelLayout.setVerticalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPanelLayout.createSequentialGroup()
                .addContainerGap(116, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(usernameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(passwordInput, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(LoginPanelLayout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(LoginPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(redirectToSignup, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        MainLayer.add(LoginPanel, "card2");

        footer.setBackground(new java.awt.Color(200, 150, 50));
        footer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Vectors.png"))); // NOI18N
        footer.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        signupInputEmail.setBackground(new java.awt.Color(34, 73, 87));
        signupInputEmail.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        signupInputEmail.setForeground(new java.awt.Color(255, 255, 255));
        signupInputEmail.setText("Enter Your Email");
        signupInputEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(34, 73, 87), 8));
        signupInputEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                signupInputEmailFocusGained(evt);
            }
        });

        signupInputName.setBackground(new java.awt.Color(34, 73, 87));
        signupInputName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        signupInputName.setForeground(new java.awt.Color(255, 255, 255));
        signupInputName.setText("Enter Your Name");
        signupInputName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(34, 73, 87), 8));
        signupInputName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                signupInputNameFocusGained(evt);
            }
        });

        signupButton.setBackground(new java.awt.Color(89, 255, 116));
        signupButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        signupButton.setText("Signup");
        signupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupButtonActionPerformed(evt);
            }
        });

        sinupPasswordRetypeInput.setBackground(new java.awt.Color(34, 73, 87));
        sinupPasswordRetypeInput.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        sinupPasswordRetypeInput.setForeground(new java.awt.Color(255, 255, 255));
        sinupPasswordRetypeInput.setText("Retype Password");
        sinupPasswordRetypeInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(34, 73, 87), 8));
        sinupPasswordRetypeInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sinupPasswordRetypeInputFocusGained(evt);
            }
        });

        signupPasswordInput.setBackground(new java.awt.Color(34, 73, 87));
        signupPasswordInput.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        signupPasswordInput.setForeground(new java.awt.Color(255, 255, 255));
        signupPasswordInput.setText("Password");
        signupPasswordInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(34, 73, 87), 8));
        signupPasswordInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                signupPasswordInputFocusGained(evt);
            }
        });

        subheading.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        subheading.setForeground(new java.awt.Color(34, 73, 87));
        subheading.setText("Sign up and Start transferring your Files");

        signupLabel.setFont(new java.awt.Font("Tahoma", 0, 64)); // NOI18N
        signupLabel.setForeground(new java.awt.Color(34, 73, 87));
        signupLabel.setText("Sign Up");

        LoginBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LoginBackMouseClicked(evt);
            }
        });

        redirectToSignup1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        redirectToSignup1.setForeground(new java.awt.Color(34, 73, 87));
        redirectToSignup1.setText("Already Have an Account? Login Now!");
        redirectToSignup1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                redirectToSignup1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout SignupPanelLayout = new javax.swing.GroupLayout(SignupPanel);
        SignupPanel.setLayout(SignupPanelLayout);
        SignupPanelLayout.setHorizontalGroup(
            SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignupPanelLayout.createSequentialGroup()
                .addGap(444, 444, 444)
                .addGroup(SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(subheading, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(SignupPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(signupLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(signupPasswordInput, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sinupPasswordRetypeInput, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(signupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(signupInputEmail)
                        .addComponent(signupInputName, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(redirectToSignup1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SignupPanelLayout.createSequentialGroup()
                .addComponent(footer, javax.swing.GroupLayout.PREFERRED_SIZE, 1290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SignupPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LoginBack, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        SignupPanelLayout.setVerticalGroup(
            SignupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignupPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LoginBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(33, 33, 33)
                .addComponent(signupLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(subheading, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(signupInputName, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(signupInputEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(signupPasswordInput, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sinupPasswordRetypeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(signupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(redirectToSignup1)
                .addGap(32, 32, 32)
                .addComponent(footer, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        MainLayer.add(SignupPanel, "card3");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sideBar.setBackground(new java.awt.Color(89, 255, 116));

        dashSignup.setBackground(new java.awt.Color(89, 255, 116));
        dashSignup.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        dashSignup.setText("Signup");
        dashSignup.setBorderPainted(false);
        dashSignup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashSignupActionPerformed(evt);
            }
        });

        dashLogin.setBackground(new java.awt.Color(89, 255, 116));
        dashLogin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        dashLogin.setText("Login");
        dashLogin.setBorderPainted(false);
        dashLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashLoginActionPerformed(evt);
            }
        });

        receiveFile.setBackground(new java.awt.Color(89, 255, 116));
        receiveFile.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        receiveFile.setText("Receive File");
        receiveFile.setBorderPainted(false);
        receiveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiveFileActionPerformed(evt);
            }
        });

        sendFile.setBackground(new java.awt.Color(89, 255, 116));
        sendFile.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sendFile.setText("Send File");
        sendFile.setBorderPainted(false);
        sendFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendFileActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Logo fessage.png"))); // NOI18N
        jLabel4.setText("jLabel4");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout sideBarLayout = new javax.swing.GroupLayout(sideBar);
        sideBar.setLayout(sideBarLayout);
        sideBarLayout.setHorizontalGroup(
            sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashLogin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(dashSignup, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(receiveFile, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sideBarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addGroup(sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(sendFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
        );
        sideBarLayout.setVerticalGroup(
            sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sideBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(receiveFile, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                .addComponent(dashLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dashSignup, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
            .addGroup(sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(sideBarLayout.createSequentialGroup()
                    .addGap(129, 129, 129)
                    .addComponent(sendFile, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(365, Short.MAX_VALUE)))
        );

        jPanel1.add(sideBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 250, 540));

        UserName.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        UserName.setForeground(new java.awt.Color(51, 255, 51));
        UserName.setText("UserName");
        jPanel1.add(UserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 60, -1, -1));

        Header.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        Header.setForeground(new java.awt.Color(51, 255, 51));
        Header.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Vecotrs inverse.png"))); // NOI18N
        Header.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(Header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, 110));

        insideLayers.setLayout(new java.awt.CardLayout());

        uploadFile.setOpaque(false);
        uploadFile.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        selectFile.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        selectFile.setText("Select File");
        selectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFileActionPerformed(evt);
            }
        });
        uploadFile.add(selectFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 140, 276, 72));

        choosenFilePath.setText("Please Choose A File");
        uploadFile.add(choosenFilePath, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 230, 276, -1));

        UploadFile.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        UploadFile.setText("Send File");
        UploadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadFileActionPerformed(evt);
            }
        });
        uploadFile.add(UploadFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 270, 276, 72));

        progressBar.setBackground(new java.awt.Color(89, 255, 116));
        progressBar.setForeground(new java.awt.Color(51, 51, 255));
        progressBar.setStringPainted(true);
        uploadFile.add(progressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 360, 276, 20));

        jLabel7.setText("IP:");
        uploadFile.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 180, -1, -1));

        IPserver.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                IPserverKeyReleased(evt);
            }
        });
        uploadFile.add(IPserver, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 180, 180, -1));

        connectServer.setText("Connect");
        connectServer.setEnabled(false);
        connectServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectServerActionPerformed(evt);
            }
        });
        uploadFile.add(connectServer, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, 200, 60));

        serverStatus.setText("Status: NotConnected");
        uploadFile.add(serverStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, 180, -1));

        jLabel11.setText("Port:");
        uploadFile.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 220, -1, -1));

        serverPort.setText("5002");
        serverPort.setEnabled(false);
        uploadFile.add(serverPort, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 220, 43, -1));

        jLabel12.setText("Your Name: ");
        uploadFile.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 250, -1, -1));
        uploadFile.add(clientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 250, 140, 30));

        insideLayers.add(uploadFile, "card2");

        startReceivingFile.setOpaque(false);
        startReceivingFile.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        clientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data", "#", "Name", "IP"
            }
        ));
        clientTable.setComponentPopupMenu(clientTableMenu);
        jScrollPane1.setViewportView(clientTable);
        if (clientTable.getColumnModel().getColumnCount() > 0) {
            clientTable.getColumnModel().getColumn(0).setMinWidth(0);
            clientTable.getColumnModel().getColumn(0).setPreferredWidth(0);
            clientTable.getColumnModel().getColumn(0).setMaxWidth(0);
            clientTable.getColumnModel().getColumn(1).setMinWidth(30);
            clientTable.getColumnModel().getColumn(1).setPreferredWidth(30);
            clientTable.getColumnModel().getColumn(1).setMaxWidth(30);
            clientTable.getColumnModel().getColumn(3).setPreferredWidth(20);
        }

        startReceivingFile.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, 830, 97));

        fileTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File", "ID", "Name", "From", "Save To PC"
            }
        ));
        fileTable.setComponentPopupMenu(fileTableMenu);
        jScrollPane2.setViewportView(fileTable);
        if (fileTable.getColumnModel().getColumnCount() > 0) {
            fileTable.getColumnModel().getColumn(0).setMinWidth(0);
            fileTable.getColumnModel().getColumn(0).setPreferredWidth(0);
            fileTable.getColumnModel().getColumn(0).setMaxWidth(0);
            fileTable.getColumnModel().getColumn(1).setPreferredWidth(10);
            fileTable.getColumnModel().getColumn(4).setMinWidth(0);
            fileTable.getColumnModel().getColumn(4).setPreferredWidth(0);
            fileTable.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        startReceivingFile.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 310, 830, 148));

        portToconnect.setText("5002");
        portToconnect.setAutoscrolls(false);
        portToconnect.setEnabled(false);
        portToconnect.setPreferredSize(new java.awt.Dimension(75, 20));
        startReceivingFile.add(portToconnect, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, -1, 28));

        startServer.setBackground(new java.awt.Color(89, 255, 116));
        startServer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        startServer.setText("Start Server");
        startServer.setBorderPainted(false);
        startServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startServerActionPerformed(evt);
            }
        });
        startReceivingFile.add(startServer, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 120, -1, -1));

        IP.setText("Your IP: 127.0.0.1");
        startReceivingFile.add(IP, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, 132, 28));

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        jLabel9.setText("Files Recieved");
        startReceivingFile.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 270, -1, -1));

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        jLabel10.setText("Connected Clients");
        startReceivingFile.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 120, -1, -1));

        statusServer.setText("Status");
        startReceivingFile.add(statusServer, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 30, -1, -1));

        jLabel8.setText("Port");
        startReceivingFile.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, -1, -1));

        jLabel13.setText("Incoming File:");
        startReceivingFile.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 460, -1, -1));

        incomingFileProgress.setStringPainted(true);
        startReceivingFile.add(incomingFileProgress, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 460, 750, -1));

        incomingfileName.setText("0%");
        incomingfileName.setOpaque(true);
        incomingfileName.setPreferredSize(new java.awt.Dimension(0, 0));
        startReceivingFile.add(incomingfileName, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 405, -1, -1));

        insideLayers.add(startReceivingFile, "card3");

        jPanel1.add(insideLayers, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 80, 1030, 570));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Vectors.png"))); // NOI18N
        jLabel6.setText("ffffffffffffffffffffffff");
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 580, 1280, 130));

        javax.swing.GroupLayout userdashLayout = new javax.swing.GroupLayout(userdash);
        userdash.setLayout(userdashLayout);
        userdashLayout.setHorizontalGroup(
            userdashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        userdashLayout.setVerticalGroup(
            userdashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainLayer.add(userdash, "card4");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 710, Short.MAX_VALUE)
        );

        MainLayer.add(jPanel4, "card5");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 710, Short.MAX_VALUE)
        );

        MainLayer.add(jPanel5, "card5");

        getContentPane().add(MainLayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 710));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passwordInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordInputFocusGained
        passwordInput.setText(null);
        passwordInput.setBackground(new Color(34,73,87));
        passwordInput.repaint();
        passwordInput.revalidate();
    }//GEN-LAST:event_passwordInputFocusGained

    private void redirectToSignupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redirectToSignupMouseClicked
        switchPanel(SignupPanel);
    }//GEN-LAST:event_redirectToSignupMouseClicked

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        login();
    }//GEN-LAST:event_loginButtonActionPerformed

    private void usernameInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameInputFocusGained

        if(usernameInput.getText().trim().equalsIgnoreCase("Username")){
            usernameInput.setText(null);
            usernameInput.setBackground(new Color(34,73,87));
            usernameInput.repaint();
            usernameInput.revalidate();
        }
    }//GEN-LAST:event_usernameInputFocusGained

    private void signupInputEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_signupInputEmailFocusGained
        signupInputEmail.setText(null);
    }//GEN-LAST:event_signupInputEmailFocusGained

    private void signupInputNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_signupInputNameFocusGained
        signupInputName.setText(null);
    }//GEN-LAST:event_signupInputNameFocusGained

    private void signupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signupButtonActionPerformed
        try {
            signup();
        } catch (Exception ex) {
           JFrame j= new JFrame();
                JOptionPane.showMessageDialog(j, ex);
        }
    }//GEN-LAST:event_signupButtonActionPerformed

    private void sinupPasswordRetypeInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sinupPasswordRetypeInputFocusGained
        sinupPasswordRetypeInput.setText(null);
    }//GEN-LAST:event_sinupPasswordRetypeInputFocusGained

    private void signupPasswordInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_signupPasswordInputFocusGained
        signupPasswordInput.setText(null);
    }//GEN-LAST:event_signupPasswordInputFocusGained

    private void LoginBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginBackMouseClicked
        switchPanel(LoginPanel);
    }//GEN-LAST:event_LoginBackMouseClicked

    private void redirectToSignup1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redirectToSignup1MouseClicked
        // TODO add your handling code here:
        switchPanel(LoginPanel);
    }//GEN-LAST:event_redirectToSignup1MouseClicked

    private void dashSignupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashSignupActionPerformed
        // TODO add your handling code here:
        switchPanel(SignupPanel);
    }//GEN-LAST:event_dashSignupActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        switchPanel(userdash);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void dashLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashLoginActionPerformed
        // TODO add your handling code here:
        switchPanel(LoginPanel);
    }//GEN-LAST:event_dashLoginActionPerformed

    private void receiveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiveFileActionPerformed
        try {
            String ip = InetAddress.getLocalHost().getHostAddress();
//            String HostIP = new String(ip);
            IP.setText(ip);
        } catch (UnknownHostException ex) {
                   JFrame j= new JFrame();
                JOptionPane.showMessageDialog(j, ex);

        }
        switchInsidePanel(startReceivingFile);
    }//GEN-LAST:event_receiveFileActionPerformed

    private void sendFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendFileActionPerformed
        // TODO add your handling code here:
        switchInsidePanel(uploadFile);
    }//GEN-LAST:event_sendFileActionPerformed

    private void selectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFileActionPerformed
        if("Connected".equals(serverStatus.getText().trim()))
        {
            try {
                MainForm.progressBar.setValue(0);
                String choosenFile=client.ChooseFile();
                choosenFilePath.setText(choosenFile);
            } catch (IOException ex) {
                JFrame j= new JFrame();
                JOptionPane.showMessageDialog(j, ex);
            }
        }
    }//GEN-LAST:event_selectFileActionPerformed

    private void UploadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadFileActionPerformed
        if(choosenFilePath.getText().trim().equalsIgnoreCase("Please Choose A File"))
        {
            System.out.println("Please Choose a File");
        }
        else{
            try {
                client.sendFile();
            } catch (IOException ex) {
                JFrame j= new JFrame();
                JOptionPane.showMessageDialog(j, ex);            }
        }
    }//GEN-LAST:event_UploadFileActionPerformed

    private void startServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startServerActionPerformed
        
        if(true)//if(portToconnect.getText().trim()!=null)
        {
            int PORT =5002;// Integer.parseInt(portToconnect.getText().trim());
            System.out.println("Port: "+PORT);
            serverStatus.setText("Starting");
            Thread startServerThread;
            startServerThread=new Thread(server);
            startServerThread.start();
            
            
        }
    }//GEN-LAST:event_startServerActionPerformed

    private void connectServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectServerActionPerformed
       if(validateIP(IPserver.getText().trim()))
       {
           String IP=IPserver.getText().trim();
           if(true)//if(serverPort.getText().trim()!=null)
           {
               int PORT=5002;//Integer.parseInt(serverPort.getText().trim());
                String NameOfClient = clientName.getText().trim();
                client=new Client(IP,PORT,NameOfClient);
                System.out.println("Searching..");
                serverStatus.setText("Searching...");
               try {
                   if(client.connectToServer())
                    serverStatus.setText("Connected");
                   else
                       serverStatus.setText("try Again");
               } catch (IOException ex) {
                  JFrame j= new JFrame();
                  JOptionPane.showMessageDialog(j, ex);
               }
               
                
           }
           
           
       }
    }//GEN-LAST:event_connectServerActionPerformed
    int keycountIP=0;
    private void IPserverKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IPserverKeyReleased
         if(evt.getKeyCode() != evt.VK_BACK_SPACE)
        {  
            keycountIP+=1;
        }
         if (keycountIP>7) {
             if(validateIP(IPserver.getText().trim()))
            connectServer.setEnabled(true);
        }
    }//GEN-LAST:event_IPserverKeyReleased

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        //testFeat();
    }//GEN-LAST:event_jLabel4MouseClicked

    private void DownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DownloadActionPerformed
        if(fileTable.getSelectedRow()>=0)
        {
            int row = fileTable.getSelectedRow();
            byte[] filetoDownload = (byte[])fileTable.getValueAt(row,0);
            String Name;
            Name = (String) fileTable.getValueAt(row,2);
            System.out.println("Name of File: "+Name+" at row: "+row);
            try {
                downloadFile(filetoDownload,Name);
            } catch (IOException ex) {
               JFrame j= new JFrame();
                JOptionPane.showMessageDialog(j, ex);            }
            
        }
    }//GEN-LAST:event_DownloadActionPerformed

    private void DisconnectClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisconnectClientActionPerformed
        if(clientTable.getSelectedRow()>=0)
        {
            int row = clientTable.getSelectedRow();
            Socket clientToRemove = (Socket)clientTable.getValueAt(row,0);
            int ClientID;
            ClientID = (int) clientTable.getValueAt(row,1);
            try {
                removeClient(clientToRemove,row);
            } catch (IOException ex) {
               JFrame j= new JFrame();
                JOptionPane.showMessageDialog(j, ex);            }
            
        }
    }//GEN-LAST:event_DisconnectClientActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            JFrame j= new JFrame();
                JOptionPane.showMessageDialog(j, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem DisconnectClient;
    private javax.swing.JMenuItem Download;
    private javax.swing.JLabel Header;
    private javax.swing.JLabel IP;
    private javax.swing.JTextField IPserver;
    private javax.swing.JLabel LoginBack;
    private javax.swing.JPanel LoginPanel;
    private javax.swing.JLayeredPane MainLayer;
    private javax.swing.JPanel SignupPanel;
    private javax.swing.JButton UploadFile;
    private javax.swing.JLabel UserName;
    private javax.swing.JTextField choosenFilePath;
    private javax.swing.JTextField clientName;
    private static javax.swing.JTable clientTable;
    private javax.swing.JPopupMenu clientTableMenu;
    private javax.swing.JButton connectServer;
    private javax.swing.JButton dashLogin;
    private javax.swing.JButton dashSignup;
    private static javax.swing.JTable fileTable;
    private javax.swing.JPopupMenu fileTableMenu;
    private javax.swing.JLabel footer;
    private static javax.swing.JProgressBar incomingFileProgress;
    private static javax.swing.JLabel incomingfileName;
    private javax.swing.JLayeredPane insideLayers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField passwordInput;
    private javax.swing.JTextField portToconnect;
    private static javax.swing.JProgressBar progressBar;
    private javax.swing.JButton receiveFile;
    private javax.swing.JLabel redirectToSignup;
    private javax.swing.JLabel redirectToSignup1;
    private javax.swing.JButton selectFile;
    private javax.swing.JButton sendFile;
    private javax.swing.JTextField serverPort;
    private javax.swing.JLabel serverStatus;
    private javax.swing.JPanel sideBar;
    private javax.swing.JButton signupButton;
    private javax.swing.JTextField signupInputEmail;
    private javax.swing.JTextField signupInputName;
    private javax.swing.JLabel signupLabel;
    private javax.swing.JTextField signupPasswordInput;
    private javax.swing.JTextField sinupPasswordRetypeInput;
    private javax.swing.JPanel startReceivingFile;
    private javax.swing.JButton startServer;
    private static javax.swing.JLabel statusServer;
    private javax.swing.JLabel subheading;
    private javax.swing.JPanel uploadFile;
    private javax.swing.JPanel userdash;
    private javax.swing.JTextField usernameInput;
    // End of variables declaration//GEN-END:variables
/**All the functions Are written Below*/
    
    /**To login the user*/
    public void login()
    {
       
        try {
            String Username = usernameInput.getText();
            char[] recievedPassbyte =  passwordInput.getPassword();
            String recievedPass = new String(recievedPassbyte);
            String passHash="";
            System.out.println("Username: "+Username+"|password: "+recievedPass);
            try {
                passHash = new Passhash().passHashOld(Username, recievedPass);
                System.out.println("Hash: "+passHash);
            } catch (Exception ex) {
               JFrame j= new JFrame();
                JOptionPane.showMessageDialog(j, ex);
            }
            user=new User();
            int Log = user.loginUser(Username,passHash);
            switch(Log)
            {
                case 1 -> { //logged in success
                    dashLogin.setText("Logout");
                    dashSignup.setText("Another Account");
                    UserName.setText(user.getName());
                    clientName.setText(user.getName());
                    clientName.enable(false);
                    switchPanel(userdash);
                }
                case 2 -> { //if password doesnot match
                    passwordInput.setBackground(Color.red);
                    passwordInput.repaint();
                    passwordInput.revalidate();
                }
                case 0 -> {
                    usernameInput.setBackground(Color.red);
                    usernameInput.repaint();
                    usernameInput.revalidate();
                }
                case 3 -> {
                    JOptionPane.showInternalMessageDialog(null,"Too many Wrong Attempts.","Banned",JOptionPane.ERROR_MESSAGE);
                }
            }
            
        } catch (SQLException | ClassNotFoundException ex) {
           JFrame j= new JFrame();
                JOptionPane.showMessageDialog(j, ex);
        }
    }
   
    
     public void signup() throws Exception
    {
            String _email=signupInputEmail.getText();
            String _Username=signupInputName.getText();
            String _Pass=signupPasswordInput.getText();
            String[] hash_Salt = new Passhash().passHashNew(_Pass);
            String PassHash = hash_Salt[0];
            String PassSalt = hash_Salt[1];
            System.out.println("generating Otp....");

            if(_Pass.equalsIgnoreCase(sinupPasswordRetypeInput.getText().trim()))
            {  
                user=new User();
                user.UserSignup(_email,_Username,PassHash,PassSalt);
            }
            dashLogin.setText("Logout");
            dashSignup.setText("Another Account");
            UserName.setText(user.getName());
            clientName.enable(false);
            switchPanel(userdash);

    }
    
    
    /**To redirect user to new page*/
    public void switchPanel(JPanel p)
    {
        MainLayer.removeAll();
        MainLayer.add(p);
        MainLayer.repaint();
        MainLayer.revalidate();
    }
    public void switchInsidePanel(JPanel p)
    {
        insideLayers.removeAll();
        insideLayers.add(p);
        insideLayers.repaint();
        insideLayers.revalidate();
    }
    /**check IP address*/
   
    public static boolean validateIP(final String ip) {
        return PATTERNIP.matcher(ip).matches();
    }  
    /**Update Percentage*/

    static int checkinProgrs = 1;
    public static void UpdateSendProgress(int val)
        {
            System.out.println("it is being called");     
            MainForm.progressBar.setValue(val);
            if(checkinProgrs+1==val)
            {
                checkinProgrs+=1;
                progressBar.update(progressBar.getGraphics());
            }
            else if(val == 100)
            {
                progressBar.setValue(val);
            }
            
            //MainForm.progressBar.revalidate();
        }
    static int checkinProgrss = 1;
    public static void UpdateReceievedProgress(int val)
        {
            System.out.println("it is being called");
            MainForm.incomingFileProgress.setValue(val);
            if(checkinProgrss+1==val)
            {
                checkinProgrss+=1;
                incomingFileProgress.update(incomingFileProgress.getGraphics());
            }
            else if(val == 100)
            {
                incomingFileProgress.setValue(val);
            }
            //MainForm.progressBar.revalidate();
        }
    //updateing serverStatus Label
    public static void UpdateServer(String status)
    {
        MainForm.statusServer.setText(status);
    }
    //Setting incoming file Name
    public static void incomingFileName(String Name)
    {
        System.out.println("Incoming File Name: "+Name);
        incomingfileName.setText(Name);
    }
    public static void UpdateClientTable(Object[] data)
    {
        model=(DefaultTableModel) clientTable.getModel();
        model.addRow(data);
    }
    private static int fileID=0;
    public static void UpdateFileTable(Object[] data)
    {
        data[1]=fileID;
        model=(DefaultTableModel) fileTable.getModel();
        model.addRow(data);
        fileID++;
    }
    //downnloading File
    public void downloadFile(byte[] data,String Name) throws IOException
    {
        JFileChooser f = new JFileChooser();
        f.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY); 
        f.showSaveDialog(null);
        String directory=f.getCurrentDirectory().getAbsolutePath();
        String filePath = directory+"\\"+Name;
        System.out.println("File PATH: "+filePath);
        //creating an empty directory with fileName
        File fileToStore = new File(filePath);
        //creating an output stream to write file into
        FileOutputStream fileOutputStream = null;
        try {
            fileOutputStream = new FileOutputStream(fileToStore);
            //writing file
            try {
                fileOutputStream.write(data); //TODO make it in Thread
                
                JOptionPane.showMessageDialog(this,"Downloaded.","Success",JOptionPane.WARNING_MESSAGE);
            } catch (IOException ex) {
               JFrame j= new JFrame();
                JOptionPane.showMessageDialog(j, ex);
            }
        } catch (FileNotFoundException ex) {
            JFrame j= new JFrame();
                JOptionPane.showMessageDialog(j, ex);
        }
//        fileOutputStream.close();
        System.out.println("done");
        
    }
    public static void removeClient(Socket clientToRemove,int row) throws IOException
    {
        try (clientToRemove) {
            Server.clientToremove(clientToRemove);
        }
        model = (DefaultTableModel)clientTable.getModel();
        model.removeRow(row);
    }

//    private void testFeat()
//    {
//        System.out.println(client.isConnected());
//    }
}
